const GuildSettings = require('../../../models/GuildSettings');
const { EmbedBuilder, ActionRowBuilder, RoleSelectMenuBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');

module.exports = {
    customId: /^settings_select_rank_role:.+:.+/,
    async execute(interaction) {
        const [_, hypixelGuildId, rankIndexStr] = interaction.customId.split(':');
        const rankIndex = parseInt(rankIndexStr, 10) - 1;
        const guildId = interaction.guild.id;

        const settings = await GuildSettings.findOne({ discordGuildId: guildId });
        const guildConfig = settings?.linkedGuilds.find(g => g.hypixelGuildId === hypixelGuildId);

        if (!guildConfig || !guildConfig.guildRanks || !guildConfig.guildRanks[rankIndex]) {
            return interaction.update({
                content: '‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ä–∞–Ω–≥ –≥–∏–ª—å–¥–∏–∏.',
                embeds: [],
                components: []
            });
        }

        const rankName = guildConfig.guildRanks[rankIndex];
        const rankKey = `rank${rankIndex + 1}`;
        const currentRoleId = guildConfig.roles?.rankRoles?.[rankKey] || '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞';

        const embed = new EmbedBuilder()
            .setTitle(`üéñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–∏ –¥–ª—è —Ä–∞–Ω–≥–∞: ${rankName}`)
            .setDescription(`–¢–µ–∫—É—â–∞—è —Ä–æ–ª—å: ${currentRoleId ? `<@&${currentRoleId}>` : '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞'}\n –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é —Ä–æ–ª—å –¥–ª—è —ç—Ç–æ–≥–æ —Ä–∞–Ω–≥–∞.`)
            .setColor(0x5865F2);

        const selectMenu = new RoleSelectMenuBuilder()
            .setCustomId(`select_rank_role_commit:${hypixelGuildId}:${rankIndex}`)
            .setPlaceholder('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å...');

        const selectRow = new ActionRowBuilder().addComponents(selectMenu);

        const backRow = new ActionRowBuilder().addComponents(
            new ButtonBuilder()
                .setCustomId(`settings_configure_guild_ranks:${hypixelGuildId}`)
                .setLabel('üîô –ù–∞–∑–∞–¥')
                .setStyle(ButtonStyle.Danger)
        );

        await interaction.update({
            embeds: [embed],
            components: [selectRow, backRow]
        });
    }
};
